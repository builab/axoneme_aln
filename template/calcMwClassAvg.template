%-------------------------------------------------------------
% TEMPLATE
% @purpose Calculate weight factor
% @version 1.0
% @date 20080301
% @new a new lower limit which prevents particles having CCC less than
%       a lower limit to be averaged.
%-------------------------------------------------------------
%%% --- START HEADER ---
number_of_class = #d#NumberOfReferences#;
iterationNo = #d#IterationNo#;
volSize = [2 2 2]*#d#ExtractedParticleRadius#;
listFile =  #s#ListFile#;
taFile = #s#TiltAngleFile#;
weightFile = #s#WeightFile#;
lowerLimit = #d#LowerLimit#;
%%% --- END HEADER -----

% --- Program default -----
docInputPrefix = ['doc_class' sprintf('%0.2d', iterationNo) '_'];
docDir = 'doc';
%--------------------------

disp(['Vol Size: ' num2str(volSize)])
disp(['List File: ' listFile])
disp(['Tilt Angle: ' taFile])
disp(['Weight File: ' weightFile])
disp(['Lower Limit: ' num2str(lowerLimit)]);

[mtb_list, number_of_records] = parse_list(listFile);
taContent = parse_ta_list(taFile);

for classId = 1:number_of_class

	alnContent = [];
	taListContent = [];
	weightClassFile = regexprep(weightFile, '\.spi', ['_avg' sprintf('%0.2d', iterationNo) '_c' sprintf('%0.3d', classId) '.spi']);	
	disp(['Ouput: ' weightClassFile]);

	for doubletId = 1:number_of_records
    	docInputFile = [docDir '/' docInputPrefix mtb_list{1}{doubletId} '.spi'];
    	disp(['Reading ' docInputFile]);
    	docInputContent = parse_spider_doc(docInputFile);

		classIndex = find(docInputContent(:,8) == classId);
		docInputContent = docInputContent(classIndex, :);	

		if (doubletId > 1) 
			alnContent = [alnContent ; docInputContent(:,[1:3 7])];
		else
			alnContent = docInputContent(:,[1:3 7]);
		end
    
	    for j = 1:size(taContent,1)
	        if ~isempty(strfind(mtb_list{2}{doubletId}, taContent{j,1}))
	            tilt_info  = taContent{j,2};
            	break;
        	end
   		end
    
   		taListContent = [taListContent; repmat(tilt_info, size(docInputContent,1), 1)];
	end

	weight = calc_weight_factor_new(volSize, alnContent, taListContent, lowerLimit);
	tom_spiderwrite2(weightClassFile, weight);
end



exit;
