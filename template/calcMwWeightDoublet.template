%-------------------------------------------------------------
% TEMPLATE
% @purpose Calculate weight factor for each seperate doublet
% @version 1.0
% @date 20100122
% @new a new lower limit which prevents particles having CCC less than
%       a lower limit to be averaged.
%-------------------------------------------------------------
%%% --- START HEADER ---
volSize = [2 2 2]*#d#ExtractedParticleRadius#;
listFile =  #s#ListFile#;
taFile = #s#TiltAngleFile#;
weightFile = #s#WeightFile#;
lowerLimit = #d#LowerLimit#;
%%% --- END HEADER -----

% --- Program default -----
docInputPrefix = 'doc_total_';
docDir = 'doc';
%--------------------------

disp(['Vol Size: ' num2str(volSize)])
disp(['List File: ' listFile])
disp(['Tilt Angle: ' taFile])
disp(['Lower Limit: ' num2str(lowerLimit)]);

taContent = parse_ta_list(taFile);

for i = 1:9
	weightDoubletFile = regexprep(weightFile, '\.spi$', ['_d' num2str(i) '\.spi']);
	weightDoubletFile = regexprep(weightDoubletFile, ['_avg_d' num2str(i) '\.spi'], ['_d' num2str(i) '_avg\.spi']);
	weightDoubletFile = regexprep(weightDoubletFile, ['_ida_v1_d' num2str(i) ], ['_d' num2str(i)]);
	listDoubletFile = regexprep(listFile, '\.txt$', ['_d' num2str(i) '\.txt']);
	listDoubletFile = regexprep(listDoubletFile, ['_ida_v1_d' num2str(i)], ['_d' num2str(i)]);

	disp(['Weight File: ' weightDoubletFile])
	disp(['List File: ' listDoubletFile])

	[mtb_list, number_of_records] = parse_list(listDoubletFile);

	alnContent = [];
	taListContent = [];

	for doubletId = 1:number_of_records
   	 	docInputFile = [docDir '/' docInputPrefix mtb_list{1}{doubletId} '.spi'];
	 	disp(['Reading ' docInputFile]);
   	 	docInputContent = parse_spider_doc(docInputFile);

		if (doubletId > 1) 
			alnContent = [alnContent ; docInputContent(:,[1:3 7])];
		else
			alnContent = docInputContent(:,[1:3 7]);
		end
    
   		for j = 1:size(taContent,1)
        		if ~isempty(strfind(mtb_list{2}{doubletId}, taContent{j,1}))
         	   		tilt_info  = taContent{j,2};
            		break;
        	end
	end
    
    	taListContent = [taListContent; repmat(tilt_info, size(docInputContent,1), 1)];
	end

	weight = calc_weight_factor(volSize, alnContent, taListContent, lowerLimit);
	tom_spiderwrite2(weightDoubletFile, weight);

end

exit;
